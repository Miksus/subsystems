[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools]
packages = ["subsystems"]

[tool.hatch]

[tool.hatch.build.hooks.custom]
source="app"
target="subsystems/app"
skip_exist=false
index="index.html"

[project.scripts]
my-client = "subsystems.main_cli:main"

[tool.hatch.build.targets.sdist]
artifacts = [
    "/subsystems/app",
]
include = [
    "/subsystems/app/*",
    "/subsystems",
]

[tool.hatch.build.targets.wheel]
artifacts = [
    "/subsystems/app",
]
include = [
    "/subsystems/app/*",
    "/subsystems",
]
[project]
name = "subsystems"
description = "Assembler for Pythonic back-end and Javascript front-end"
readme = "README.md"
license = {file="LICENCE"}
authors = [
    {name = "Mikael Koli", email = "koli.mikael@gmail.com"},
]
requires-python = ">=3.7"

dynamic = ["version"]
dependencies = [
    'rocketry', 
    'fastapi',
    "jinja2",
    'uvicorn[standard]',
    'sqlalchemy'
]

[tool.hatch.version]
path = "subsystems/_version.py"

[tool.setuptools_scm]
write_to = "subsystems/_version.py"
local_scheme = "no-local-version"

[project.optional-dependencies]
test = [
    "pytest",
    "requests",
    "httpx",
    "pytest-asyncio",
    "flask",
    "fastapi",
    "uvicorn[standard]",
    "gunicorn",
    "waitress",
]

docs = [
    "sphinx >= 1.7.5",
    "pydata-sphinx-theme",
    "sphinx_book_theme",
    "sphinx-copybutton",
    "sphinx-material",
]

[tool.coverage.run]
source = ["subsystems"]
branch = false
omit = [
    "tests/*",
    "_version.py"
]
data_file = "cov_data/.coverage"

[tool.coverage.report]
omit = [
    "subsystems/tests/*",
    "subsystems/_version.py",
    "subsystems/__main__.py"
]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",

    # Don't complain about abstract methods, they aren't run:
    '''@(abc\.)?abstractmethod''',

    # Ignore type checking imports
    "if TYPE_CHECKING",
]
ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"